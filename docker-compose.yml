services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      - USER_SERVICE_URL=http://user-service:3001
    depends_on:
      - user-service
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - 3001:3001
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=codeinterviewhub
      - DB_SCHEMA=user_schema
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    volumes:
      - ./user-service:/app

    command: ["bun", "run", "dev"]
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  email-service:
    build:
      context: ./email-service
      dockerfile: Dockerfile
    ports:
      - 3002:3002
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    volumes:
      - ./email-service:/app
    command: ["bun", "run", "dev"]
    depends_on:
      rabbitmq:
        condition: service_healthy
  postgres:
    image: postgres:17
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=codeinterviewhub

    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
  rabbitmq-data:
